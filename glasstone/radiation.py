import numpy as np
from glasstone.utilities import convert_units, ValueOutsideGraphError

_soviet_summary_x = {1: [178.187, 216.791, 288.384, 358.464, 419.841, 494.466, 611.458, 736.658, 810.839, 896.559, 974.248, 1029.058, 1097.689, 1181.455, 1251.08, 1396.348, 1516.388], 2: [241.939, 289.668, 383.109, 458.022, 528.547, 590.153, 645.046, 738.03, 812.38, 916.714, 1017.874, 1100.919, 1224.489, 1316.567, 1381.868, 1537.182, 1642.237], 3: [273.257, 339.128, 433.14, 518.149, 587.091, 652.027, 707.815, 801.841, 903.232, 982.23, 1074.457, 1165.874, 1290.447, 1386.634, 1464.73, 1623.502, 1700.499], 5: [316.353, 400.04, 465.615, 511.418, 594.201, 673.028, 751.419, 806.745, 902.173, 1013.963, 1082.823, 1186.911, 1261.106, 1413.095, 1508.572, 1585.055, 1742.467, 1828.517], 10: [371.385, 446.179, 516.769, 572.626, 651.981, 736.453, 819.315, 875.122, 977.6, 1102.714, 1189.72, 1299.724, 1380.734, 1530.743, 1641.84, 1733.753, 1914.714, 1985.741], 20: [464.197, 538.477, 612.838, 664.865, 762.608, 841.495, 924.869, 993.699, 1111.739, 1226.096, 1308.641, 1427.197, 1529.062, 1695.736, 1735.953, 1804.76, 1897.794, 2010.801, 2195.897], 30: [528.378, 612.756, 677.78, 741.991, 839.143, 917.95, 1010.878, 1078.497, 1201.759, 1339.006, 1435.427, 1554.042, 1672.169, 1839.996, 1953.653, 2070.469, 2198.222, 2274.261, 2352.263], 50: [578.396, 665.936, 744.818, 814.521, 916.905, 1017.498, 1105.875, 1183.64, 1305.65, 1442.044, 1542.255, 1677.733, 1782.396, 1966.888, 2085.647, 2193.53, 2382.706, 2441.061], 100: [717.556, 813.948, 896.32, 963.346, 1078.444, 1184.662, 1288.95, 1360.911, 1493.428, 1635.73, 1740.092, 1894.139, 2029.85, 2206.493, 2336.472, 2444.285, 2597.135, 2729.531], 200: [852.6, 970.918, 1061.591, 1137.643, 1265.957, 1370.642, 1478.621, 1560.008, 1712.771, 1867.574, 1977.333, 2098.682, 2147.682, 2257.732, 2410.999, 2592.959, 2731.2, 2965.663, 3059.788], 300: [950.283, 1065.362, 1161.479, 1226.181, 1357.543, 1481.047, 1594.169, 1677.79, 1822.068, 1986.295, 2103.982, 2208.168, 2267.334, 2367.868, 2596.433, 2752.14, 2875.444, 3000.947, 3149.576], 500: [1046.454, 1174.317, 1275.458, 1353.546, 1497.219, 1623.011, 1735.381, 1834.261, 1981.448, 2142.948, 2265.528, 2367.837, 2416.277, 2535.349, 2752.655, 2896.54, 3017.589, 3137.357], 1000: [1281.357, 1391.214, 1490.801, 1572.336, 1709.713, 1822.695, 1942.161, 2033.851, 2179.854, 2343.932, 2462.741, 2574.475, 2624.529, 2724.676, 2961.669, 3115.0, 3151.989]}

_soviet_summary_y = {1: [5.255031163345551, 4.99151071117766, 4.59075970324411, 4.263476190393417, 4.045624923654058, 3.7542392131603366, 3.333412005531363, 2.967600387907415, 2.7523120191634725, 2.5137687775093833, 2.3063778423771155, 2.1688214630098237, 1.9944711305056417, 1.7672894745994325, 1.6013101864538866, 1.2808059283936666, 1.0525015634137806], 2: [5.235023159495222, 4.998635259004299, 4.59154774135914, 4.2782187924334885, 4.001278763085195, 3.765928234373441, 3.5759242503137307, 3.288152605547845, 3.0600133818782433, 2.7595809771062014, 2.5253182616316194, 2.3149389836687546, 1.9931186605828168, 1.7707636715770387, 1.594127251355629, 1.272491400688568, 1.0816712872909238], 3: [5.298416380061294, 4.997824647694848, 4.5892500026557475, 4.26705374860792, 3.9884261066576623, 3.755360788793565, 3.5813850156916587, 3.2943958956246635, 2.962010669697767, 2.76197592372873, 2.528205571492855, 2.318071686699416, 2.0001085600510344, 1.7665243810295221, 1.593197426448274, 1.2640618707178792, 1.132547842465581], 5: [5.301029995663981, 4.999469972062732, 4.759653916831088, 4.586069578205397, 4.269141790773212, 3.9977781649536195, 3.759773044506078, 3.57894517091749, 3.280645739967762, 2.958480265123891, 2.766628453515499, 2.5271179823398633, 2.3529288629475174, 1.9863954812622464, 1.7649602935697946, 1.5884397883055261, 1.2827353726210184, 1.1377970430581865], 10: [5.307496037913213, 5.003460532109506, 4.763543919740476, 4.584235827441386, 4.272541394548597, 3.995257369569433, 3.756630555934142, 3.581150955181751, 3.2883914326116974, 2.971197427376731, 2.7570367520961807, 2.529187728517821, 2.328664961441525, 1.9907959999081801, 1.763727403765698, 1.596146074834445, 1.2767604225577776, 1.1761202110560853], 20: [5.301247088636211, 4.994083054583848, 4.765123363081404, 4.57961744719938, 4.269213317785724, 3.99326979989362, 3.753905940571658, 3.56813904028583, 3.2819212846752133, 2.981919130859176, 2.767627765660985, 2.530044656867185, 2.3262334209042397, 1.9911108394203798, 1.9033179317646742, 1.7576920377663625, 1.5887085834134098, 1.388154507768882, 1.0939117410493782], 30: [5.30984300471607, 4.9975554510759, 4.757723243570624, 4.583925342643939, 4.272751625762894, 4.002892044421471, 3.7616193647844445, 3.580262085452035, 3.282024972408813, 2.9766062609374107, 2.767302091057536, 2.52144668938648, 2.3127780112133824, 1.9776870315819832, 1.7696357577897464, 1.5806969397124364, 1.3608962160749207, 1.2604768583274228, 1.1365303235312998], 50: [5.300812794118117, 5.00389116623691, 4.77035213083298, 4.594594864581725, 4.270650216010361, 3.9992394058775322, 3.7607741496950644, 3.570618818041454, 3.283764907122704, 2.963071595293723, 2.7592121629771964, 2.5085162522669364, 2.3055405258433077, 1.977023598756041, 1.7622883485258207, 1.573834342922927, 1.2667959598466674, 1.1955398965493178], 100: [5.3016809492935755, 5.010299956639812, 4.766920214107535, 4.592520902125035, 4.2743502822427555, 3.998454203970102, 3.7437004518260086, 3.571633493228921, 3.2865914079252665, 2.978174580168903, 2.759939665717116, 2.49296561798407, 2.266619706351234, 1.974525508884959, 1.7608671059979406, 1.5777444902942728, 1.3601198615808052, 1.1686742295670796], 200: [5.298853076409706, 4.9951092834656645, 4.7574630507485995, 4.575600805804865, 4.2706725254390925, 3.9854999880330952, 3.747607856522838, 3.5795781724662494, 3.2880848245084424, 2.963280066973351, 2.765649931097187, 2.5714351284125097, 2.4907406291436276, 2.301529147360923, 2.0557986595324804, 1.7828021615881569, 1.5777330075534524, 1.2591636713402166, 1.1410105533423238], 300: [5.307282047033346, 4.9944537425433735, 4.7623000750992945, 4.5893373953567895, 4.269932652742184, 3.9952945127195076, 3.7476376755018665, 3.5737239101228004, 3.2867689415486967, 2.9661375071505436, 2.7528056887890773, 2.586331828384725, 2.4990957098297226, 2.3127526482364003, 1.9810798143736401, 1.7635926947181728, 1.5808565774579955, 1.410422906967378, 1.2163242786866675], 500: [5.301247088636211, 4.992375173069678, 4.759617743098959, 4.586977094637898, 4.265744712803417, 3.9887801053809167, 3.7563506426612228, 3.573719737924056, 3.2829520694337324, 2.9637453399375815, 2.7559594205747566, 2.5719241791576644, 2.495726064942023, 2.2992566299586006, 1.9695090985965666, 1.7547610251682748, 1.5720230867438456, 1.41427122809658], 1000: [5.297760511099133, 5.000434077479318, 4.7639335923124015, 4.5846249523764655, 4.26929408404881, 4.032301061800226, 3.7635625291336283, 3.5746350383254266, 3.2823968647439927, 2.9731809821216038, 2.754616628462107, 2.5707892037456053, 2.4939541041409554, 2.340971293979597, 1.9631122574903388, 1.7508939203821252, 1.6911787773419542]}

def _soviet_summary(actual_yield, scale_range):
    keys = _soviet_summary_x.keys()
    keys.sort() # keys may be returned in arbitrary order
    if keys[-1] < actual_yield or actual_yield < keys[0]:
        raise ValueOutsideGraphError(actual_yield)
    for k in xrange(len(keys)):
        k1 = keys[k]
        k2 = keys[k + 1]
        if k1 <=  actual_yield <= k2:
            xs1 = _soviet_summary_x[k1]
            ys1 = _soviet_summary_y[k1]
            xs2 = _soviet_summary_x[k2]
            ys2 = _soviet_summary_y[k2]
            if xs1[-1] < scale_range or scale_range < xs1[0] or xs2[-1] < scale_range or scale_range < xs2[0]:
                raise ValueOutsideGraphError(scale_range)
            y1 = np.interp(scale_range, xs1, ys1)
            y2 = np.interp(scale_range, xs2, ys2)
            return 10**np.interp(actual_yield, [k1, k2], [y1, y2])
            
_soviet_neutron_x = {1: [152.86, 205.385, 255.976, 291.832, 356.053, 430.133, 481.821, 535.99, 607.15, 684.588, 716.477, 752.96, 799.737, 906.038, 992.66, 1069.074, 1128.915, 1197.301, 1342.801], 2: [204.078, 273.966, 288.133, 323.491, 359.837, 427.521, 503.866, 554.475, 608.02, 688.394, 765.807, 802.883, 838.749, 888.343, 997.227, 1084.428, 1166.561, 1224.699, 1334.17, 1458.575], 3: [258.648, 322.293, 340.49, 368.294, 409.25, 486.084, 555.482, 614.135, 664.277, 754.34, 835.242, 862.015, 903.039, 958.972, 1062.782, 1153.975, 1236.623, 1299.913, 1414.033, 1526.981], 5: [300.108, 363.761, 385.976, 412.702, 458.254, 535.663, 613.073, 667.708, 717.798, 803.857, 899.641, 931.001, 971.453, 1030.751, 1135.092, 1226.837, 1308.956, 1379.767, 1493.28, 1629.198], 10: [362.917, 426.005, 448.795, 489.781, 526.717, 604.13, 680.987, 748.814, 808.075, 893.551, 976.748, 1026.388, 1062.294, 1126.735, 1235.633, 1335.459, 1422.156, 1489.482, 1616.164, 1734.313], 20: [426.245, 494.491, 522.345, 562.857, 598.643, 675.485, 757.5, 820.733, 885.148, 977.442, 1059.478, 1100.529, 1137.021, 1201.973, 1320.183, 1433.173, 1522.786, 1591.802, 1711.004, 1842.878], 30: [477.198, 549.462, 616.171, 666.299, 743.707, 829.164, 898.124, 948.787, 1053.688, 1151.807, 1187.75, 1237.938, 1296.714, 1419.916, 1519.697, 1613.926, 1695.011, 1826.272, 1958.696], 50: [525.889, 607.26, 668.314, 717.308, 817.631, 913.35, 972.05, 1039.917, 1127.061, 1225.739, 1271.934, 1314.089, 1386.561, 1493.86, 1613.615, 1712.945, 1781.416, 1926.406, 2058.34], 100: [600.277, 688.606, 750.756, 804.876, 894.362, 989.544, 1052.794, 1117.202, 1226.189, 1328.877, 1363.709, 1413.89, 1482.359, 1604.491, 1718.587, 1829.846, 1908.003, 2054.151, 2189.516], 200: [698.112, 775.547, 843.336, 899.737, 982.256, 1080.969, 1148.784, 1212.063, 1312.386, 1413.355, 1468.128, 1510.862, 1579.314, 1715.732, 1837.284, 1933.158, 2014.807, 2165.54, 2301.962], 300: [766.457, 857.04, 919.181, 973.308, 1065.005, 1165.351, 1238.319, 1293.57, 1399.052, 1509.112, 1549.076, 1594.696, 1666.583, 1794.399, 1908.551, 2021.576, 2103.216, 2254.522, 2405.276], 500: [880.972, 971.022, 1038.302, 1074.666, 1174.987, 1270.712, 1343.116, 1405.896, 1501.613, 1606.592, 1656.242, 1697.313, 1774.376, 1906.191, 2020.29, 2133.383, 2215.013, 2358.899, 2503.925], 1000: [997.574, 1077.365, 1158.342, 1203.32, 1303.082, 1394.838, 1463.739, 1532.178, 1646.3, 1746.642, 1782.589, 1831.645, 1919.013, 2044.688, 2171.451, 2275.882, 2366.685, 2511.702, 2648.206]}

_soviet_neutron_y = {1: [5.296884475538547, 4.986012806807732, 4.755680049961186, 4.590513605643165, 4.280001796477857, 3.9805945190884024, 3.759880181656876, 3.5763169276543394, 3.2876884404089175, 2.9942419036418926, 2.8948364609939157, 2.7672983803726106, 2.6016200454048084, 2.282347902007881, 1.9973077323996913, 1.7730180733986516, 1.5925875322729295, 1.374436714981712, 1.0167827124868405], 2: [5.299507298700488, 4.989112200500068, 4.889983910952806, 4.768597059589659, 4.587248065735322, 4.283665679530277, 3.983298841870349, 3.7643098386268248, 3.577562338238597, 3.283367046473336, 3.006935169123008, 2.8963443048033666, 2.7702561042938285, 2.593591738192222, 2.278618720144291, 2.0014654401477783, 1.7771294572734755, 1.5951102557780383, 1.2926547301979863, 1.0185340704281831], 3: [5.304921161900891, 4.988399000934791, 4.896963631498398, 4.75486738961703, 4.589650940737443, 4.272340688640556, 3.9774112581199166, 3.762325884457418, 3.574044122654131, 3.2821680979472174, 2.996343525614592, 2.886473804278622, 2.7644167590441326, 2.588468915811978, 2.2904909375345617, 1.9963365180957835, 1.7720061417196926, 1.5892344924155037, 1.2951711067901035, 1.0087704499377523], 5: [5.29512708525219, 4.983924467928976, 4.891743857385891, 4.752617039652333, 4.5936437805306864, 4.281730407298547, 3.9705776791407117, 3.7562380634682673, 3.5672640449719974, 3.284640949171633, 2.9936861534670256, 2.885287134836398, 2.7592854972880136, 2.593448896922472, 2.273269872504703, 2.0022179147184107, 1.7695176366590872, 1.586013116495539, 1.2988748997046988, 1.0064232525076429], 10: [5.297103650149256, 4.986653943898674, 4.899870241065146, 4.7531215654678105, 4.5871980825829946, 4.277567089134097, 3.9756808245222794, 3.7621525915153775, 3.573213909623245, 3.2805594776919493, 3.0124499818845347, 2.8972734646344125, 2.763577724466645, 2.592364429800638, 2.2859666579756603, 2.010312679924586, 1.7729960999370415, 1.6010381982177941, 1.3008562431183934, 1.0129636998257776], 20: [5.3014640731433, 4.99494056222077, 4.884867727121721, 4.764261472961776, 4.587543914684055, 4.275628492567607, 3.976804993074433, 3.7585558368579153, 3.5703981509217617, 3.2885595167277337, 3.0027395566372794, 2.8976281907687507, 2.776245589516851, 2.601991584559888, 2.2872618843889714, 1.9954026312539184, 1.7765631755217548, 1.5992169342396696, 1.2928539224724493, 1.0173255545617221], 30: [5.299942900022767, 4.9925238672750485, 4.756650870964976, 4.592230679871967, 4.279625953291378, 3.974590761215292, 3.7610671130315314, 3.5767291620989003, 3.2841495358550628, 3.0038554398497315, 2.893260064711198, 2.7665355328459906, 2.5967542927707497, 2.2785158167842865, 2.006803933077934, 1.7749109365927125, 1.6052188252788242, 1.300421557383072, 1.0148564200445058], 50: [5.301247088636211, 4.98645219090887, 4.758234697577675, 4.593049755405277, 4.272855162406137, 3.97408497190474, 3.755817860305965, 3.567673441654124, 3.2873369653275306, 3.0023414726556488, 2.8910248103854768, 2.7674512343423108, 2.591566539455673, 2.2844713413001707, 2.001975881244265, 1.770866733239471, 1.6065103443171866, 1.2848366376423963, 1.0146885118723374], 100: [5.29512708525219, 4.981577744706084, 4.762494140690162, 4.580383993540933, 4.2823497608792245, 3.968983126432845, 3.7615928968016346, 3.5687317093307875, 3.2869576177066535, 2.9958908705174805, 2.8998161266420097, 2.7684575392652073, 2.6033468517667826, 2.292366846636225, 2.0151081606458368, 1.7687564618075629, 1.6044420662607228, 1.298263432540114, 1.0150662140111493], 200: [5.290924559382754, 4.9959527100788055, 4.758562318708238, 4.585797554975057, 4.280059707099145, 3.984274043574642, 3.7638294554674174, 3.5741455589952844, 3.286943486660705, 3.016688690131323, 2.8892210002919443, 2.7732567800273458, 2.59666525801861, 2.295076454966619, 2.0086470049160665, 1.775311836170616, 1.6034042217395634, 1.2964019016921435, 0.9977794308656038], 300: [5.307709923404807, 4.98658294975421, 4.76148227024383, 4.584075084750907, 4.283006328603725, 3.977336636559826, 3.7569117331109396, 3.573352659371752, 3.290043297165298, 3.0021868036841983, 2.8938205514568116, 2.777868142890389, 2.5904996569028285, 2.290330721501013, 2.016184801467411, 1.7782742830580436, 1.6009075833350341, 1.2984819125134826, 1.005223424858136], 500: [5.295786940251609, 4.995459721729752, 4.762701530472545, 4.592833677748682, 4.270979408266988, 3.9760820279261466, 3.757176548333465, 3.5781420651424396, 3.277849785764588, 3.002215754301932, 2.89319509026371, 2.7678879813919983, 2.595963333121219, 2.283497973818962, 2.0079013323969312, 1.7807780104337305, 1.5973221466588428, 1.2940250940953226, 0.99471298543157], 1000: [5.300160536951352, 4.996007295704928, 4.757906798776606, 4.594228006690684, 4.277766288200403, 3.9811936159443246, 3.7630357533997354, 3.5787662712156716, 3.285461438608583, 3.0098094019375883, 2.90218843368859, 2.77622014351883, 2.604335153167427, 2.2864519785708968, 2.0047468598775513, 1.7736548206486495, 1.5909866497384992, 1.2862543208287909, 1.0068082084925787]}

def _soviet_neutron(actual_yield, scale_range):
    keys = _soviet_neutron_x.keys()
    keys.sort() # keys may be returned in arbitrary order
    if keys[-1] < actual_yield or actual_yield < keys[0]:
        raise ValueOutsideGraphError(actual_yield)
    for k in xrange(len(keys)):
        k1 = keys[k]
        k2 = keys[k + 1]
        if k1 <=  actual_yield <= k2:
            xs1 = _soviet_neutron_x[k1]
            ys1 = _soviet_neutron_y[k1]
            xs2 = _soviet_neutron_x[k2]
            ys2 = _soviet_neutron_y[k2]
            if xs1[-1] < scale_range or scale_range < xs1[0] or xs2[-1] < scale_range or scale_range < xs2[0]:
                raise ValueOutsideGraphError(scale_range)
            y1 = np.interp(scale_range, xs1, ys1)
            y2 = np.interp(scale_range, xs2, ys2)
            return 10**np.interp(actual_yield, [k1, k2], [y1, y2])

_soviet_gamma_x = {1: [41.563, 105.882, 121.719, 151.005, 191.182, 251.312, 321.062, 420.301, 505.879, 597.988, 672.595, 740.3, 855.413, 982.404, 1030.109, 1084.386, 1200.732, 1306.501, 1403.049], 2: [108.801, 168.261, 183.628, 222.389, 262.344, 326.854, 396.479, 508.921, 601.297, 712.743, 799.358, 872.096, 992.845, 1128.437, 1172.126, 1239.831, 1398.549, 1480.569, 1596.382], 3: [145.879, 201.671, 255.259, 294.796, 363.738, 443.656, 555.791, 661.848, 765.003, 852.67, 939.764, 1070.496, 1210.744, 1261.481, 1329.696, 1401.169, 1607.297, 1703.824], 5: [172.195, 241.588, 300.443, 349.281, 428.81, 526.402, 648.632, 603.869, 758.722, 808.538, 1005.6, 1197.564, 1341.979, 1398.576, 1460.828, 1548.198, 1720.415, 1802.809, 1873.984], 10: [245.086, 328.782, 392.7, 441.558, 534.75, 622.673, 699.998, 759.146, 802.297, 880.425, 1011.455, 1106.556, 1197.928, 1345.338, 1503.047, 1556.159, 1633.094, 1724.767, 1806.583, 1930.708, 1998.677, 2070.025], 20: [365.701, 454.138, 522.977, 577.144, 671.418, 769.447, 855.238, 923.982, 1013.409, 1178.204, 1269.17, 1364.403, 1526.553, 1699.677, 1762.092, 1843.928, 1938.965, 2008.549, 2151.381, 2197.084, 2284.155], 30: [418.705, 517.013, 581.513, 653.487, 755.53, 852.867, 929.856, 997.49, 1117.229, 1248.625, 1363.798, 1467.902, 1597.359, 1655.607, 1799.112, 1876.158, 1962.017, 2074.833, 2197.265, 2281.267, 2395.195, 2447.888], 50: [479.145, 582.208, 659.664, 727.38, 825.37, 937.418, 1029.097, 1103.1, 1195.075, 1242.246, 1387.834, 1499.339, 1599.4, 1775.691, 1950.156, 2025.999, 2120.607, 2238.212, 2391.006, 2462.12, 2605.299, 2651.714], 100: [613.38, 728.077, 810.229, 887.584, 999.103, 1124.161, 1206.232, 1288.202, 1402.139, 1569.89, 1694.404, 1794.425, 2002.154, 2136.155, 2231.558, 2312.821, 2427.166, 2599.168, 2663.604, 2791.805, 2829.358], 200: [753.727, 879.602, 980.826, 1049.542, 1179.918, 1313.674, 1418.568, 1508.542, 1600.354, 1807.152, 1923.569, 2032.39, 2232.97, 2361.273, 2447.08, 2541.944, 2656.799, 2803.612, 2885.558, 3019.606], 300: [861.428, 988.73, 1093.336, 1175.786, 1301.854, 1438.711, 1552.354, 1648.056, 1785.877, 1952.173, 2056.739, 2176.925, 2378.587, 2527.929, 2623.241, 2709.119, 2793.631, 3000.8, 3113.92], 500: [976.585, 1121.369, 1217.041, 1293.529, 1434.469, 1586.759, 1691.937, 1778.305, 1932.114, 2079.909, 2204.495, 2309.865, 2523.474, 2675.769, 2776.431, 2871.214, 2972.415, 3138.147], 1000: [1221.915, 1347.176, 1444.787, 1527.287, 1656.325, 1786.6, 1901.966, 1997.137, 2149.865, 2314.227, 2438.866, 2539.221, 2753.402, 2883.143, 2994.003, 3096.892, 3187.396]}

_soviet_gamma_y = {1: [5.306210508167761, 4.9726189412606825, 4.88548348951321, 4.760753167744857, 4.563111362444507, 4.2791122029608015, 3.979481632079979, 3.584164486617554, 3.2958524311411384, 2.997381141373932, 2.775887754588629, 2.588842918606718, 2.2868672159353816, 2.0111600592592094, 1.9181876613589253, 1.7671781370230277, 1.500634350036307, 1.2827127230352664, 1.094610863032137], 2: [5.297760511099133, 4.979770636534197, 4.880019410556236, 4.750704847451836, 4.574237468113377, 4.270692528430488, 3.9806221753361273, 3.5666175368148156, 3.2925165699038663, 2.9958610567225237, 2.757997701897653, 2.5907292913584095, 2.3069801406320853, 2.0084681602401404, 1.9028945104895745, 1.760686297495916, 1.4492469194900113, 1.292344693840592, 1.066810275625833], 3: [5.297979244159362, 4.9855095524642286, 4.7572135943908735, 4.564093743962466, 4.281802705449646, 3.969028462597977, 3.5786765645623704, 3.293758212298986, 3.0002201315037027, 2.770945485309664, 2.585787737273634, 2.299023269035383, 2.0045578064083593, 1.9061841440608713, 1.7695102530215938, 1.6100103643840256, 1.2283490206236372, 1.037745129269592], 5: [5.296006669313671, 4.978963107856503, 4.748419110999223, 4.568136340219351, 4.281208709508302, 3.9679563859697424, 3.570125840299804, 3.709467469153079, 3.292359314812493, 3.1671991432977515, 2.6689289111814993, 2.286236347481581, 1.9886570410646158, 1.8911637702449442, 1.7614692579263656, 1.59990489536868, 1.2917461408242068, 1.1467480136306398, 1.0549575960124065], 10: [5.300160536951352, 4.969395963240479, 4.756291715394278, 4.57041330931864, 4.278264172543338, 3.9844673630663103, 3.7368838338771155, 3.573350339506246, 3.468546705576317, 3.293507295416635, 2.9837980768169814, 2.7727821668170325, 2.5758687835444802, 2.2798243016678947, 2.0013095928439872, 1.8951848898969788, 1.7672300981107183, 1.6082906378089863, 1.467089898520816, 1.2817149700272956, 1.1640255242878397, 1.0589192607188844], 20: [5.307709923404807, 4.974430656788123, 4.744835973320765, 4.557560396714179, 4.271662579932304, 3.9654297045833884, 3.750288955139786, 3.568786102377516, 3.346553251484651, 2.974520903551252, 2.764142493821375, 2.587694131573226, 2.2848884758038905, 1.9965072941635444, 1.8991143368327656, 1.7563622110126267, 1.5949999167322457, 1.4913476841088917, 1.2748503200166648, 1.2016155823139427, 1.0589571787773104], 30: [5.295567099962478, 4.971887522450742, 4.758792800695331, 4.560699773897271, 4.267213676876462, 3.973576885166375, 3.751911681174549, 3.570389859124879, 3.2746546935309975, 2.9815966481709557, 2.764617677286023, 2.585274563406384, 2.3518928919039603, 2.2576881724312425, 2.0300691783050517, 1.893617527936911, 1.7587983859770013, 1.5888764959134987, 1.403549454032318, 1.2813061367418213, 1.1154440834362396, 1.0415505817176458], 50: [5.297103650149256, 4.965912529108515, 4.753038501451072, 4.565214041806293, 4.266063404382919, 3.971968450581134, 3.7475073576989026, 3.572397684039099, 3.3739363546285066, 3.2731675460634437, 2.9748261315106648, 2.7633096696385313, 2.5775940423220858, 2.273471213873524, 2.0244199849280338, 1.8909907612287584, 1.7626260551755024, 1.5864860324935257, 1.3686587123922267, 1.2816922671609374, 1.0833234184735248, 1.0407605242286986], 100: [5.286456469746983, 4.97179216653772, 4.759847718644552, 4.554762963882498, 4.256621594174985, 3.954673067812679, 3.7489602291604163, 3.5551451334723687, 3.339633071584339, 2.972183854943114, 2.7569219943833234, 2.5742512545399285, 2.2525302229604196, 2.0358698136955526, 1.8870487451417692, 1.7435803122533728, 1.590340179032167, 1.3435858206914026, 1.2738574353711178, 1.0963885466873664, 1.0600553648248445], 200: [5.289811839117621, 4.969834837033311, 4.739302650080882, 4.564103507628078, 4.259907900227836, 3.9724855007868407, 3.7323831436058788, 3.553578428469301, 3.367651438935535, 2.9750837739362668, 2.747855975030428, 2.567813032684483, 2.2467496308798904, 2.0166071876214335, 1.885756881069267, 1.7377729050183055, 1.5900612308037423, 1.3806995483827167, 1.2742271460457704, 1.094610863032137], 300: [5.293804359919337, 4.961631293929057, 4.743694653288398, 4.5536419020191445, 4.2635387615234075, 3.9572576518243268, 3.7236076074752518, 3.5559500967487847, 3.2731302673186815, 2.9688367777305302, 2.753944437591166, 2.5583004779628644, 2.243487001132171, 2.0144827358521917, 1.8767776732870185, 1.7404732231132278, 1.6197296902221354, 1.3451776165427038, 1.1966458867870875], 500: [5.277609214304091, 4.951633180446687, 4.741405842852417, 4.5623722914384475, 4.255310335330481, 3.946033440582237, 3.7288845145124845, 3.5547646709064167, 3.258829249207867, 2.9738415426831666, 2.7570230739606276, 2.5658726010754394, 2.243472126165613, 2.019332344955279, 1.876904545314822, 1.7351516015826705, 1.5920323388015538, 1.375901268009488], 1000: [5.278524964737017, 4.960854756191255, 4.735715393147705, 4.541838507740144, 4.25107806959105, 3.9587799256204566, 3.7228928592134, 3.551188976881074, 3.2529689891081555, 2.954946460770362, 2.7340914241171608, 2.566512912638645, 2.244900275848457, 2.034472034324192, 1.8725990855885102, 1.7420334793124208, 1.6120417446452693]}

def _soviet_gamma(actual_yield, scale_range):
    keys = _soviet_gamma_x.keys()
    keys.sort() # keys may be returned in arbitrary order
    if keys[-1] < actual_yield or actual_yield < keys[0]:
        raise ValueOutsideGraphError(actual_yield)
    for k in xrange(len(keys)):
        k1 = keys[k]
        k2 = keys[k + 1]
        if k1 <=  actual_yield <= k2:
            xs1 = _soviet_gamma_x[k1]
            ys1 = _soviet_gamma_y[k1]
            xs2 = _soviet_gamma_x[k2]
            ys2 = _soviet_gamma_y[k2]
            if xs1[-1] < scale_range or scale_range < xs1[0] or xs2[-1] < scale_range or scale_range < xs2[0]:
                raise ValueOutsideGraphError(scale_range)
            y1 = np.interp(scale_range, xs1, ys1)
            y2 = np.interp(scale_range, xs2, ys2)
            return 10**np.interp(actual_yield, [k1, k2], [y1, y2])

# These functions adjust doses on the basis of the season-dependent scales
# found in the graphs

def neutron_mtn_adjust(scale_range):
    return 10**(2.715065e-4 * scale_range)

def neutron_winter_adjust(scale_range):
    return 10**(-5.0064374e-4  * scale_range)

def gamma_mtn_adjust(scale_range):
    return 10**(1.6580746e-4 * scale_range)

def gamma_winter_adjust(scale_range):
    return 10**(-3.2679923e-4 * scale_range)

def soviet_summary(y, sr, scenario='summer', dunits='m', runits='Roentgen'):
    scale_range = convert_units(sr, dunits, 'm')
    if scenario == 'summer':
        a_factor = 1.0
    elif scenario == 'winter':
        a_factor = gamma_winter_adjust(scale_range)
    elif scenario == 'mountain':
        a_factor = gamma_mtn_adjust(scale_range)
    dose =  _soviet_summary(y, scale_range) * a_factor
    return convert_units(dose, 'Roentgen', runits)

def soviet_gamma(y, sr, scenario='summer', dunits='m', runits='Roentgen'):
    scale_range = convert_units(sr, dunits, 'm')
    if scenario == 'summer':
        a_factor = 1.0
    elif scenario == 'winter':
        a_factor = gamma_winter_adjust(scale_range)
    elif scenario == 'mountain':
        a_factor = gamma_mtn_adjust(scale_range)
    dose =  _soviet_gamma(y, scale_range) * a_factor
    return convert_units(dose, 'Roentgen', runits)

def soviet_neutron(y, sr, scenario='summer', dunits='m', runits='Roentgen'):
    scale_range = convert_units(sr, dunits, 'm')
    if scenario == 'summer':
        a_factor = 1.0
    elif scenario == 'winter':
        a_factor = neutron_winter_adjust(scale_range)
    elif scenario == 'mountain':
        a_factor = neutron_mtn_adjust(scale_range)
    dose =  _soviet_neutron(y, scale_range) * a_factor
    return convert_units(dose, 'Roentgen', runits)

# The approximation technique for prompt radiation dose provided by TEoNW 3rd ed.
# differs qualitatively from the Soviet one. Where the Soviet model emphasizes
# geophysical differences and ignores variations in weapon design, TEoNW does the
# opposite. Two cases are provided, an "offense" case assuming low exposures relative
# to yield and a "defense" case assuming low exposures. There are also seperate
# plots for "fission" and "thermonuclear" weapons. In many cases the correct choice
# of parameters for this model will be difficult to ascertain.

_glasstoneradiationx = {"ffgamma": [522.197, 631.87, 805.15, 941.895, 998.747, 1098.829, 1290.198, 1467.406, 1615.284, 1831.46, 1995.231, 2183.892, 2400.145, 2571.871, 2742.445, 2960.885, 3014.201, 3131.475, 3122.876, 3284.288, 3532.239, 3711.816, 3904.955, 4013.478, 4150.557, 4341.384, 4538.983, 4776.741, 4950.623, 5014.409, 5150.427, 5387.185, 5587.06, 5754.011, 5999.681], "fissionsecondarygammaoffense": [301.094, 380.058, 461.973, 503.793, 545.624, 684.624, 799.315, 911.586, 1014.138, 1092.727, 1245.968, 1384.02, 1508.72, 1578.634, 1724.879, 1738.464, 1910.812, 2003.665, 2139.176, 2328.007, 2508.57, 2760.936, 2947.285, 3141.903, 3401.378, 3508.356, 3601.216, 3804.623, 3994.575], "fissionsecondarygammadefense": [311.271, 390.198, 472.687, 509.884, 579.565, 689.505, 796.563, 980.062, 1109.907, 1261.457, 1461.872, 1516.757, 1636.214, 1812.281, 2005.875, 2043.721, 2228.584, 2248.057, 2438.52, 2508.068, 2703.259, 2899.558, 3002.358, 3099.97, 3360.032, 3503.777, 3568.644, 3776.165, 4002.422], "fissionneutronoffense": [309.774, 380.086, 447.568, 509.621, 563.025, 661.325, 754.482, 881.136, 985.349, 1011.869, 1102.268, 1242.819, 1355.914, 1460.125, 1514.745, 1618.702, 1750.37, 1751.69, 1883.89, 2016.657, 2067.537, 2199.072, 2326.47, 2509.208, 2654.571, 2790.742, 2987.424, 3133.99, 3288.875, 3476.724, 3628.031, 3769.582, 3989.055], "fissionneutrondefense": [307.281, 340.884, 433.047, 508.685, 621.099, 742.3, 833.176, 941.97, 1010.202, 1091.82, 1203.773, 1319.74, 1477.772, 1600.586, 1723.532, 1894.508, 2034.827, 2025.83, 2171.98, 2364.559, 2510.704, 2647.971, 2844.484, 2985.942, 3135.571, 3336.351, 3486.547, 3632.069, 3837.976, 3998.76], "thermonuclearneutron": [300.038, 370.34, 451.311, 494.06, 545.768, 678.741, 781.985, 885.859, 998.534, 1040.054, 1161.582, 1278.906, 1461.264, 1503.402, 1586.899, 1721.921, 1904.891, 2006.682, 2043.45, 2019.554, 2160.751, 2362.325, 2499.308, 2648.293, 2846.287, 2986.76, 3152.115, 3357.759, 3484.658, 3665.351, 3864.498, 3981.316], "thermonuclearsecondarygamma": [296.417, 319.688, 402.952, 497.78, 535.845, 639.522, 757.831, 936.529, 1008.391, 1070.094, 1200.731, 1411.637, 1515.838, 1567.442, 1569.607, 1572.936, 1734.008, 1975.76, 2159.091, 2355.864, 2506.168, 2610.398, 2799.47, 3004.494, 3285.987, 3482.734, 3688.86, 3971.452, 3994.983]}

_glasstoneradiationy = {"ffgamma": [3.0066153454238846, 2.698525928414045, 2.3044215866697786, 2.0003125795118444, 1.8824448435823466, 1.6967581655286255, 1.2964457942063963, 0.9968617684906733, 0.6991436873944836, 0.3096301674258987, 0.019531684531255453, -0.2992962828549806, -0.705533773838407, -1.0043648054024499, -1.2924298239020635, -1.6989700043360185, -1.7695510786217257, -1.9999999999999996, -1.9999999999999996, -2.301029995663981, -2.6989700043360183, -3.00056495012367, -3.3110465373625817, -3.4825401734597676, -3.697452627512514, -3.9969705294463815, -4.2918341421444595, -4.689094370623858, -4.993106292052099, -5.073657553374344, -5.296364762416103, -5.698319050706424, -5.999565922520681, -6.280254507470423, -6.719649306953993], "fissionsecondarygammaoffense": [3.5929063365439005, 3.2932047213221263, 2.995875525437455, 2.830749013705206, 2.6985911343364615, 2.2954835314654427, 1.9997045792978796, 1.7034117599030787, 1.4961405626842903, 1.301962726473363, 1.00021709297223, 0.7061201097027036, 0.44435712565602753, 0.30749603791321284, 0.006037954997317176, -8.694587126288914E-4, -0.30189945437661003, -0.45967052520912627, -0.7011469235902933, -0.9956786262173574, -1.301029995663981, -1.6989700043360185, -1.9999999999999996, -2.301029995663981, -2.6989700043360183, -2.9999999999999996, -2.9999999999999996, -3.2985183643790728, -3.5805399272139296], "fissionsecondarygammadefense": [4.3153852064452805, 3.9968144782110797, 3.6970448592387615, 3.562468569442882, 3.304679628738672, 3.00007165267833, 2.7013589899166415, 2.295089663436264, 2.0004123839064523, 1.6950874804733065, 1.3041241527329093, 1.2301933788690456, 1.00518051250378, 0.7008767083769035, 0.37346372163236896, 0.3031960574204888, 0.004321373782642578, -0.00261361560268669, -0.29843201494407257, -0.39147396642280585, -0.6968039425795111, -1.0043648054024499, -1.1611509092627446, -1.301029995663981, -1.6989700043360185, -1.9208187539523751, -1.9999999999999996, -2.301029995663981, -2.5228787452803374], "fissionneutronoffense": [4.313056188108213, 4.0012347662685706, 3.7047574182304963, 3.5008886619541593, 3.308199111144253, 2.997192350364388, 2.696261130603985, 2.3112705720458053, 2.008451123572122, 1.9197630047515004, 1.6959367467180069, 1.2995944539249227, 1.0078330927013193, 0.7097786018482252, 0.5777215245090208, 0.30556631351530394, 0.0077477780007399475, -0.005682847330363272, -0.29328221766324125, -0.5816987086802545, -0.6968039425795111, -0.9913998282380824, -1.2924298239020635, -1.6777807052660805, -1.9999999999999996, -2.301029995663981, -2.6989700043360183, -2.9999999999999996, -3.2993828043179425, -3.6981022828047916, -4.001261283744181, -4.290645224165604, -4.691222226335278], "fissionneutrondefense": [4.838984884089898, 4.700097773919967, 4.304837587681972, 4.0600637231072545, 3.7035367496709615, 3.2991728961641598, 3.005951858504372, 2.699527280755835, 2.5291119604036654, 2.2989359990973015, 2.008365930205775, 1.7101173651118162, 1.308841761261316, 1.0028137792246732, 0.7092699609758306, 0.3159703454569177, 0.0073209529227445565, 8.677215312269133E-4, -0.29670862188133856, -0.6861327796308465, -0.9829666607012195, -1.2924298239020635, -1.6989700043360185, -1.9999999999999996, -2.301029995663981, -2.6989700043360183, -2.9999999999999996, -3.300075597257523, -3.7037737127388386, -4.001915112063444], "thermonuclearneutron": [4.5735889655363655, 4.296895568431093, 3.9913463763269634, 3.855369095236528, 3.6958313353823926, 3.295588869114957, 2.994789911034912, 2.695157585920607, 2.4014194976666188, 2.298392349017668, 1.9957711645118457, 1.7014557274421962, 1.302309278369985, 1.1892656689345482, 1.003245054813147, 0.7083359026822634, 0.30037806487070257, 0.09516935143175517, 0.006037954997317176, -0.005682847330363272, -0.29843201494407257, -0.6968039425795111, -0.9788107009300618, -1.301029995663981, -1.6989700043360185, -1.9586073148417746, -2.301029995663981, -2.6989700043360183, -2.9999999999999996, -3.294563953414749, -3.692503962086787, -3.925549281045408], "thermonuclearsecondarygamma": [4.077586414908493, 4.008727290736779, 3.6932692040359445, 3.3990314945739786, 3.3048888791488986, 3.010674289436035, 2.7093462950938707, 2.3063585378738707, 2.1356509500405925, 1.9991914600882226, 1.7061542845911302, 1.307282047033346, 1.1102866084035654, 1.0067226922016845, 1.00021709297223, 0.9950645341561415, 0.6983615660551097, 0.3047058982127654, -0.004803708402820598, -0.2992962828549806, -0.5451551399914898, -0.7033348097384688, -0.9956786262173574, -1.301029995663981, -1.6989700043360185, -1.9999999999999996, -2.301029995663981, -2.6989700043360183, -2.6989700043360183]}


_surface_ffgamma_eff_yieldx = {500: [0.02077548819355783, 0.26481782300953643, 0.6214878645806301, 0.887561040930009, 1.138334282071019, 1.489325550750405, 1.7899471697375098, 2.05509916158655, 2.43967367850868, 2.7431027169278654, 3.0447153241146747, 3.4636644392189018, 3.7843463624206852, 4.109838134889854, 4.290285316210402], 1000: [0.02077548819355783, 0.26481782300953643, 0.5982431916536226, 0.8327004709605673, 1.0443045191759144, 1.340721657313007, 1.537819095073274, 1.780929070636497, 2.06869780466395, 2.2830591325425513, 2.5271141116398046, 2.821619632646062, 3.094334844309563, 3.3595220703776514, 3.6907001008326357, 3.9884249023912575, 4.291866006151835], 2000: [0.02077548819355783, 0.26481782300953643, 0.5982431916536226, 0.8327004709605673, 1.0443045191759144, 1.340721657313007, 1.537819095073274, 1.7565372208367884, 1.983062194978853, 2.166702387660925, 2.3188581178360694, 2.532858800888069, 2.7051158770970085, 2.874414551929885, 3.073084220812281, 3.2557569556999675, 3.4012378222105606, 3.6506521015705213, 3.8477873474173037, 4.061204347653072, 4.287259956767115], 3000: [0.02077548819355783, 0.26481782300953643, 0.5982431916536226, 0.8327004709605673, 1.0443045191759144, 1.340721657313007, 1.537819095073274, 1.7565372208367884, 1.983062194978853, 2.166702387660925, 2.3188581178360694, 2.5244779097753787, 2.6612682936582677, 2.7979734745514167, 2.973768657995438, 3.1105045263612316, 3.238689035523329, 3.4134989237541076, 3.5417106355888888, 3.6640413504035854, 3.8378794695011207, 3.9727753314147303, 4.100921404927936, 4.291788598759885], 4000: [0.02077548819355783, 0.26481782300953643, 0.5982431916536226, 0.8327004709605673, 1.0443045191759144, 1.340721657313007, 1.537819095073274, 1.7565372208367884, 1.983062194978853, 2.166702387660925, 2.3188581178360694, 2.5244779097753787, 2.6612682936582677, 2.7979734745514167, 2.955566053858088, 3.0684363440073987, 3.1822633934586246, 3.3330714623288973, 3.4384205077434653, 3.552106067597243, 3.6886212594407177, 3.795701885336252, 3.901853474879715, 4.0382492440563444, 4.137738728452689, 4.2740645352282085], 5000: [0.02077548819355783, 0.26481782300953643, 0.5982431916536226, 0.8327004709605673, 1.0443045191759144, 1.340721657313007, 1.537819095073274, 1.7565372208367884, 1.983062194978853, 2.166702387660925, 2.3188581178360694, 2.5244779097753787, 2.6612682936582677, 2.7979734745514167, 2.955566053858088, 3.0684363440073987, 3.1822633934586246, 3.3330714623288973, 3.4068163379671406, 3.511993190186942, 3.6398416486897913, 3.722995272967619, 3.813872021771801, 3.9282161052372677, 4.019961946011289, 4.110867435283242, 4.239542941190517, 4.290004343323119], 6000: [0.02077548819355783, 0.26481782300953643, 0.5982431916536226, 0.8327004709605673, 1.0443045191759144, 1.340721657313007, 1.537819095073274, 1.7565372208367884, 1.983062194978853, 2.166702387660925, 2.3188581178360694, 2.5244779097753787, 2.6612682936582677, 2.7979734745514167, 2.955566053858088, 3.0684363440073987, 3.1822633934586246, 3.3330714623288973, 3.4068163379671406, 3.511993190186942, 3.617117500904833, 3.693527778361012, 3.784322813898213, 3.896832099968418, 3.965743548708329, 4.056556514171715, 4.153716717940782, 4.235091988957702]}

_surface_ffgamma_eff_yieldy = {500: [0.00216606175650763, 0.2895889525425967, 0.6967930850817442, 0.9980412643634282, 1.3010734229408436, 1.6868864080253956, 1.9931760167767627, 2.2972219584632994, 2.709307281554273, 3.003845969712174, 3.300292154360819, 3.7106020144324496, 3.997547663826266, 4.3126402090040825, 4.481885970167366], 1000: [0.00216606175650763, 0.2895889525425967, 0.6971421262754594, 1.012710712741787, 1.2964238485037762, 1.6915942052430393, 1.9946690218255292, 2.2969721586565313, 2.705786763531621, 3.001006396229269, 3.303052349153772, 3.707018612628448, 4.015016124422097, 4.308527278194814, 4.646894387976985, 4.946374306087168, 5.2372923375674585], 2000: [0.00216606175650763, 0.2895889525425967, 0.6971421262754594, 1.012710712741787, 1.2964238485037762, 1.6915942052430393, 1.9946690218255292, 2.3006172198065817, 2.686888194212731, 2.9973946857215523, 3.2972368542627866, 3.6921650793405156, 4.006631769917095, 4.305585459871253, 4.700451675362172, 5.016615547557176, 5.304059466217598, 5.719414159702593, 6.014520538757924, 6.308777773664721, 6.585686278452496], 3000: [0.00216606175650763, 0.2895889525425967, 0.6971421262754594, 1.012710712741787, 1.2964238485037762, 1.6915942052430393, 1.9946690218255292, 2.3006172198065817, 2.686888194212731, 2.9973946857215523, 3.2972368542627866, 3.6993581769356205, 4.007846059068597, 4.316244808353951, 4.700479573742605, 5.000434077479318, 5.306853748693008, 5.701481635620927, 6.000434077479318, 6.305995882770804, 6.707399831133248, 7.01577875638904, 7.332842266994351, 7.765519543097952], 4000: [0.00216606175650763, 0.2895889525425967, 0.6971421262754594, 1.012710712741787, 1.2964238485037762, 1.6915942052430393, 1.9946690218255292, 2.3006172198065817, 2.686888194212731, 2.9973946857215523, 3.2972368542627866, 3.6993581769356205, 4.007846059068597, 4.316244808353951, 4.708330394273396, 5.009875633712159, 5.308564413561238, 5.718916686014861, 6.00389116623691, 6.318272080211626, 6.7032053706954855, 7.009450895798693, 7.3111178426625045, 7.729002709272189, 8.014940349792935, 8.428134794028788], 5000: [0.00216606175650763, 0.2895889525425967, 0.6971421262754594, 1.012710712741787, 1.2964238485037762, 1.6915942052430393, 1.9946690218255292, 2.3006172198065817, 2.686888194212731, 2.9973946857215523, 3.2972368542627866, 3.6993581769356205, 4.007846059068597, 4.316244808353951, 4.708330394273396, 5.009875633712159, 5.308564413561238, 5.718916686014861, 6.001733712809, 6.3109056293761405, 6.710455864335424, 7.011993114659257, 7.321184027302314, 7.715585551893196, 8.022840610876527, 8.324488233307655, 8.733438027091061, 8.856728890382882], 6000: [0.00216606175650763, 0.2895889525425967, 0.6971421262754594, 1.012710712741787, 1.2964238485037762, 1.6915942052430393, 1.9946690218255292, 2.3006172198065817, 2.686888194212731, 2.9973946857215523, 3.2972368542627866, 3.6993581769356205, 4.007846059068597, 4.316244808353951, 4.708330394273396, 5.009875633712159, 5.308564413561238, 5.718916686014861, 6.001733712809, 6.3109056293761405, 6.706120109702703, 7.014100321519619, 7.322632711692222, 7.723865964443504, 8.00987563371216, 8.313234291694723, 8.719248398447945, 9.011993114659255]}

_airburst_ffgamma_eff_yieldx = {500: [0.0017337128090005312, 0.2631624649622166, 0.619302075875608, 0.9107310980433806, 1.2195845262142546, 1.6413947800660482, 2.0032235012022888, 2.1576652519695383], 1000: [0.0017337128090005312, 0.2631624649622166, 0.619302075875608, 0.8442907432543431, 1.075875295259833, 1.397314173908845, 1.6434033220362332, 1.8817725521488877, 2.190536188711323, 2.474310982408771, 2.775369389544707, 2.9924845907562134], 2000: [0.0017337128090005312, 0.2631624649622166, 0.619302075875608, 0.8442907432543431, 1.075875295259833, 1.3370597263205244, 1.566826238587045, 1.7742833327557155, 2.062897719961374, 2.254982878895904, 2.4306602810436164, 2.662230693807398, 2.8397350284098843, 3.038588770820668, 3.29143856288653, 3.4911635543204986, 3.6918483925124796], 3000: [0.0017337128090005312, 0.2631624649622166, 0.619302075875608, 0.8442907432543431, 1.075875295259833, 1.3370597263205244, 1.566826238587045, 1.7431097788117582, 2.02009598362791, 2.204364204621005, 2.3877670003367077, 2.580701501605304, 2.7496033794765795, 2.889507313278257, 3.097895957503138, 3.2291189678309884, 3.367979329011967, 3.5687259648397758, 3.7193088257531697, 3.855392058993609, 4.055188591938642, 4.185450923600676, 4.277107549454592], 4000: [0.0017337128090005312, 0.2631624649622166, 0.619302075875608, 0.8442907432543431, 1.075875295259833, 1.3370597263205244, 1.566826238587045, 1.7431097788117582, 1.9952621553308805, 2.1632061145490478, 2.320387263070526, 2.527825740273633, 2.683183071842099, 2.839405763695695, 3.046844254509352, 3.1780616641729655, 3.302509069790357, 3.479987528697041, 3.5889823593576033, 3.689291984368063, 3.8244858820901984, 3.940245863062035, 4.049152059186514, 4.197717803464587, 4.274862336176775], 5000: [0.0017337128090005312, 0.2631624649622166, 0.619302075875608, 0.8442907432543431, 1.075875295259833, 1.3370597263205244, 1.566826238587045, 1.7431097788117582, 1.9952621553308805, 2.1632061145490478, 2.320387263070526, 2.527825740273633, 2.683183071842099, 2.839405763695695, 3.0036009657520166, 3.1203218356489733, 3.260227658155533, 3.405925431744916, 3.5148290896519656, 3.616095353006608, 3.7550206656322107, 3.8562854904519845, 3.9401815207205515, 4.063656688481407, 4.148595622139644, 4.2479482385010225, 4.286470908563415], 6000: [0.0017337128090005312, 0.2631624649622166, 0.619302075875608, 0.8442907432543431, 1.075875295259833, 1.3370597263205244, 1.566826238587045, 1.7431097788117582, 1.9952621553308805, 2.1632061145490478, 2.320387263070526, 2.527825740273633, 2.683183071842099, 2.839405763695695, 3.0036009657520166, 3.1203218356489733, 3.2248877081284992, 3.3665942129353588, 3.47558214156484, 3.568167096504888, 3.7129110413250688, 3.790035284848572, 3.874889132857955, 3.9915909513167396, 4.075577762362688, 4.151746055376026, 4.288753023458715]}

_airburst_ffgamma_eff_yieldy = {500: [4.340774793185929E-4, 0.28126068705501284, 0.6772418459466539, 0.9726193390596233, 1.2914354549271219, 1.6717003428165536, 1.9875009155951306, 2.1044188206475942], 1000: [4.340774793185929E-4, 0.28126068705501284, 0.6772418459466539, 0.9935684827897273, 1.2960286361067221, 1.6842347668126287, 1.9865612519220788, 2.2918903123316334, 2.681966265540351, 2.9989790775239147, 3.2924942032870015, 3.4874049532864713], 2000: [4.340774793185929E-4, 0.28126068705501284, 0.6772418459466539, 0.9935684827897273, 1.2960286361067221, 1.6771505212734326, 1.996117476137288, 2.290788960102358, 2.6937357402209394, 3.002147047452506, 3.2959154952472733, 3.707764798597687, 3.987820921284513, 4.312738634556333, 4.694229481403229, 5.00560944536028, 5.300160536951352], 3000: [4.340774793185929E-4, 0.28126068705501284, 0.6772418459466539, 0.9935684827897273, 1.2960286361067221, 1.6771505212734326, 1.996117476137288, 2.2877771042872195, 2.682925382705262, 2.9972404299378406, 3.3028577810026585, 3.6991425586788496, 4.006633395223794, 4.301440904368129, 4.7055167707897425, 4.994366000351396, 5.298853076409706, 5.706973676176178, 6.008600171761917, 6.310268366632447, 6.696793085081744, 7.00646604224923, 7.169380495311949], 4000: [4.340774793185929E-4, 0.28126068705501284, 0.6772418459466539, 0.9935684827897273, 1.2960286361067221, 1.6771505212734326, 1.996117476137288, 2.2877771042872195, 2.6859637540743027, 2.9973234639387853, 3.3067714670553054, 3.6864195147447356, 3.990861735964582, 4.310945851758012, 4.692527361851083, 5.004751155591, 5.306425027550687, 5.708760723690316, 5.997735776597898, 6.296445794206395, 6.696705780933916, 7.016197353512439, 7.315760490665733, 7.710794099930326, 7.928498268123691], 5000: [4.340774793185929E-4, 0.28126068705501284, 0.6772418459466539, 0.9935684827897273, 1.2960286361067221, 1.6771505212734326, 1.996117476137288, 2.2877771042872195, 2.6859637540743027, 2.9973234639387853, 3.3067714670553054, 3.6864195147447356, 3.990861735964582, 4.310945851758012, 4.70562029383502, 5.002166061756507, 5.290257269394518, 5.696618459232225, 6.006037954997317, 6.299071260027409, 6.710117365111816, 7.004751155591, 7.323252100171687, 7.703119346236077, 8.013679697291192, 8.323252100171686, 8.462996612028055], 6000: [4.340774793185929E-4, 0.28126068705501284, 0.6772418459466539, 0.9935684827897273, 1.2960286361067221, 1.6771505212734326, 1.996117476137288, 2.2877771042872195, 2.6859637540743027, 2.9973234639387853, 3.3067714670553054, 3.6864195147447356, 3.990861735964582, 4.310945851758012, 4.70562029383502, 5.002166061756507, 5.297760511099133, 5.6883308181122665, 6.010299956639812, 6.295567099962478, 6.697839368218363, 7.00646604224923, 7.310055737750891, 7.698709349442587, 7.995591324252353, 8.307067950661297, 8.753429841575421]}

def _fissionsecondarygamma(slant_range, offense):
    if offense:
        k = "fissionsecondarygammaoffense"
    else:
        k = "fissionsecondarygammadefense"
    return 10**np.interp(slant_range, _glasstoneradiationx[k], _glasstoneradiationy[k])

def _fissionneutron(slant_range, offense):
    if offense:
        k = "fissionneutronoffense"
    else:
        k = "fissionneutrondefense"
    return 10**np.interp(slant_range, _glasstoneradiationx[k], _glasstoneradiationy[k])

def _thermonuclearsecondarygamma(slant_range):
    k = "thermonuclearsecondarygamma"
    return 10**np.interp(slant_range, _glasstoneradiationx[k], _glasstoneradiationy[k])

def _thermonuclearneutron(slant_range):
    k = "thermonuclearneutron"
    return 10**np.interp(slant_range, _glasstoneradiationx[k], _glasstoneradiationy[k])

def _ffgamma(slant_range):
    k = "ffgamma"
    return 10**np.interp(slant_range, _glasstoneradiationx[k], _glasstoneradiationy[k])

def bounds(v, l):
    lower = l[0]
    if lower > v or  l[-1] < v:
        raise ValueOutsideGraphError(v)
    else:
        for n in l[1:]:
            if lower <= v < n:
                return lower, n
            else:
                lower = n
        return lower, lower # edge case when v = l[-1]

def _surface_ffgamma_eff_yield(y, slant_range):
    logy = np.log10(y)
    lkey, hkey = bounds(slant_range, sorted(_surface_ffgamma_eff_yieldy.keys()))
    lower = np.interp(logy, _surface_ffgamma_eff_yieldx[lkey], _surface_ffgamma_eff_yieldy[lkey])
    higher = np.interp(logy, _surface_ffgamma_eff_yieldx[hkey], _surface_ffgamma_eff_yieldy[hkey])
    return 10**np.interp(slant_range, [lkey, hkey], [lower, higher])

def _airburst_ffgamma_eff_yield(y, slant_range):
    logy = np.log10(y)
    lkey, hkey = bounds(slant_range, sorted(_airburst_ffgamma_eff_yieldy.keys()))
    lower = np.interp(logy, _airburst_ffgamma_eff_yieldx[lkey], _airburst_ffgamma_eff_yieldy[lkey])
    higher = np.interp(logy, _airburst_ffgamma_eff_yieldx[hkey], _airburst_ffgamma_eff_yieldy[hkey])
    return 10**np.interp(slant_range, [lkey, hkey], [lower, higher])


def _glasstone_fission_secondary_gamma(y, sr, h, offense=True):
    onekt = _fissionsecondarygamma(sr, offense)
    airburst = onekt * y
    return np.interp(h, [0, 300], [airburst * 0.5, airburst])

def _glasstonethermonuclearsecondarygamma(y, sr, h):
    onekt = _thermonuclearsecondarygamma(sr)
    airburst = onekt * y * ff
    return np.interp(h, [0, 300], [airburst * 0.5, airburst])

def _glasstonefissionneutron(y, sr, h, offense=True):
    onekt = _fissionneutron(sr, offense)
    airburst = onekt * y
    return np.interp(h, [0, 300], [airburst * 0.5, airburst])

def _glasstonethermonuclearneutron(y, sr, h):
    onekt = _thermonuclearneutron(sr)
    airburst = onekt * y
    return np.interp(h, [0, 300], [airburst * 0.5, airburst])

# Unfortunately, there is no reliable way to interpolate between these two for
# intermediate HOBs (see TEoNW 3rd ed., p. 377):

def _glasstoneffgammasurface(y, sr):
    onekt = _ffgamma(sr)
    return _surface_ffgamma_eff_yield(y, sr) * onekt

def _glasstoneffgammaairburst(y, sr):
    onekt = _ffgamma(sr)
    return _airburst_ffgamma_eff_yield(y, sr) * onekt

def _glasstone_surface_cf(y):
    """Correction factor provided by TEoNW for contact surface bursts (p. 335)."""
    return np.interp(y, [1.0, 50.0, 100.0, 300.0, 700.0, 2000.0, 5000.0, 5000.0], [0.6666666666666666, 0.6666666666666666, 1.0, 1.25, 1.5, 2.0, 3.0, 3.0])

def glasstone_fission_secondary_gamma(y, sr, h, offense=True, yunits='kT', dunits='m', runits='Roentgen'):
    """Estimates the secondary gamma dose at slant range sr from a fission burst at 
height h using the methodology in TEoNW 3rd ed. (pp. 368-82).

The 'offense' parameter accounts for differences in weapons design, which can result
in immense variations in the amount of gamma rays escaping the weapon during its
detonation. offense=True leads to conservative (low) doses, while offense=False 
produces very high doses as might occur with certain types of weapons (gun-type 
uranium bombs, for instance.)"""
    slant_range = convert_units(sr, dunits, 'yards')
    height = convert_units(h, dunits, 'ft')
    yld = convert_units(y, yunits, 'kT')
    fission_secondary_gamma = _glasstone_fission_secondary_gamma(yld, slant_range, height, offense) 
    return convert_units(fission_secondary_gamma, 'Roentgen', runits)

def glasstone_thermonuclear_secondary_gamma(y, sr, yunits='kT', dunits='m', runits='Roentgen'):
    """Estimates the secondary gamma dose at slant range sr from a thermonuclear burst
(ff=0.5) at height h using the methodology in TEoNW 3rd ed. (pp. 368-82)."""
    slant_range = convert_units(sr, dunits, 'yards')
    height = convert_units(h, dunits, 'ft')
    yld = convert_units(y, yunits, 'kT')
    thermonuclear_secondary_gamma = _glasstonethermonuclearsecondarygamma(yld, slant_range, height)
    return convert_units(thermonuclear_secondary_gamma, 'Roentgen', runits)

def glasstone_fission_neutron(y, sr, h, offense=True, yunits='kT', dunits='m', runits='Roentgen'):
    """Estimates the neutron dose at slant range sr from a fission burst at 
height h using the methodology in TEoNW 3rd ed. (pp. 368-82).

The 'offense' parameter accounts for differences in weapons design, which can result
in immense variations in the amount of neutrons escaping the weapon during its
detonation. offense=True leads to conservative (low) doses, while offense=False 
produces very high doses as might occur with certain types of weapons (gun-type 
uranium bombs, for instance.)"""
    slant_range = convert_units(sr, dunits, 'yards')
    height = convert_units(h, dunits, 'ft')
    yld = convert_units(y, yunits, 'kT')
    fission_neutron = _glasstonefissionneutron(yld, slant_range, height, offense)
    return convert_units(fission_neutron, 'Roentgen', runits)
    
def glasstone_thermonuclear_neutron(y, sr, h, yunits='kT', dunits='m', runits='Roentgen'):
    """Estimates the neutron dose at slant range sr from a thermonuclear burst
(ff=0.5) at height h using the methodology in TEoNW 3rd ed. (pp. 368-82)."""
    slant_range = convert_units(sr, dunits, 'yards')
    height = convert_units(h, dunits, 'ft')
    yld = convert_units(y, yunits, 'kT')
    thermonuclear_neutron = _glasstonethermonuclearneutron(yld, slant_range, height)
    return convert_units(thermonuclear_neutron, 'Roentgen', runits)

def glasstone_ff_gamma(y, sr, h, ff=1.0, surface=False, yunits='kT', dunits='m', runits='Roentgen'):
    """Estimates the fission-fragment gamma dose at slant range sr from a nuclear
burst of yield y at height h with a fission fraction of ff (1.0 by default), using 
the methodology in TEoNW 3rd ed. (pp. 368-82).

Unfortunately, due to the complexity of the way that hydrodynamic enhancement 
interacts with the height of burst, there is no straightforward way to interpolate
between the values given in TEoNW for a surface burst and those for an air burst (HOB
> 300 ft.) It is therefore necessary to specify with model to use with the 'surface'
keyword argument: surface=True for a surface burst, surface=False for an airburst."""
    slant_range = convert_units(sr, dunits, 'yards')
    height = convert_units(h, dunits, 'ft')
    yld = convert_units(y, yunits, 'kT')
    if surface:
        ff_gamma = _glasstoneffgammasurface(yld, slant_range)
    else:
        ff_gamma = _glasstoneffgammaairburst(yld, slant_range)
    return convert_units(ff_gamma, 'Roentgen', runits) * ff

def glasstone_summary(y, sr, h, ff=1.0, offense=True, surface=False, yunits='kT', dunits='m', runits='Roentgen'):
    """Estimates the summary dose (secondary gamma + neutron + fission-fragment 
gamma) at slant range sr from a nuclear burst of yield y at height h with a fission 
fraction of ff (1.0 by default), using the methodology in TEoNW 3rd ed. (pp. 368-82).

Bursts with a fission fraction less than 0.8 are treated as "thermonuclear" weapons.

The 'offense' keyword argument  accounts for differences in weapons design, which can
result in immense variations in the amount of gamma rays and neutrons escaping the 
weapon during detonation. offense=True leads to conservative (low) doses, while 
offense=False produces very high doses as might occur with certain types of weapons 
(gun-type uranium bombs, for instance.)

Unfortunately, due to the complexity of the way that hydrodynamic enhancement 
interacts with the height of burst, there is no straightforward way to interpolate
between the values given in TEoNW for the fission fragment gamma dose contribution 
from a surface burst and that from an air burst (HOB > 300 ft.) It is therefore 
necessary to specify with model to use with the 'surface' keyword argument: 
surface=True for a surface burst, surface=False for an airburst."""
    slant_range = convert_units(sr, dunits, 'yards')
    height = convert_units(h, dunits, 'ft')
    yld = convert_units(y, yunits, 'kT')
    if 0.8 <= ff <= 1.0: # how reasonable is this as a definition of "fission"?
        neutron = _glasstonefissionneutron(yld, slant_range, height, offense)
        gamma = _glasstone_fission_secondary_gamma(yld, slant_range, height, offense) 
    else:
        neutron = _glasstonethermonuclearneutron(yld, slant_range, height)
        gamma = _glasstonethermonuclearsecondarygamma(yld, slant_range, height)
    if surface:
        ff_gamma = _glasstoneffgammasurface(yld, slant_range) * ff
    else:
        ff_gamma = _glasstoneffgammaairburst(yld, slant_range) * ff
    summary = neutron + gamma + ff_gamma
    return convert_units(summary, 'Roentgen', runits)
